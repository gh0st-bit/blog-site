version: '3.8'

services:
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      mongo:
        condition: service_started
    environment:
      MONGODB_URI: mongodb://mongo:27017/blog-db
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: http://localhost:3000
    restart: unless-stopped
    networks:
      - blog-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongo:
    image: mongo:7-jammy
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    environment:
      MONGO_INITDB_DATABASE: blog-db
    restart: unless-stopped
    networks:
      - blog-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongo-express:
    image: mongo-express:latest
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    depends_on:
      mongo:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - blog-network

volumes:
  mongo-data:
    driver: local

networks:
  blog-network:
    driver: bridge
